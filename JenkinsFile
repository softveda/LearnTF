pipeline {
  tools {
      terraform "Terraform"
  }
  parameters {
    password (name: 'AWS_ACCESS_KEY_ID')
    password (name: 'AWS_SECRET_ACCESS_KEY')
  }
  environment {
    TF_IN_AUTOMATION = 'true'
    AWS_ACCESS_KEY_ID = "${params.AWS_ACCESS_KEY_ID}"
    AWS_SECRET_ACCESS_KEY = "${params.AWS_SECRET_ACCESS_KEY}"
    TFE_NAME = "app.terraform.io"
    TFE_URL = "https://app.terraform.io"
    TFE_ORGANIZATION = "learn-tf"
    TFE_API_URL = "${TFE_URL}/api/v2"
    TFE_API_TOKEN = credentials("tfe_api_token")
  }
   stage('TFE Workspaces list ') {
      steps {
          sh '''
            curl \
              --silent --show-error --fail \
              --header "Authorization: Bearer $TFE_API_TOKEN" \
              --header "Content-Type: application/vnd.api+json" \
              ${TFE_API_URL}/organizations/${TFE_ORGANIZATION}/workspaces \
              | jq -r \'.data[] | .attributes.name\'
          '''
      }
  }
  stage('TFE Set-up') {
    steps{
        sh '''
              tee ~/.terraformrc > /dev/null <<EOF
              credentials "${TFE_NAME}" {
                token        = "${TFE_API_TOKEN}"
              }
EOF
        '''
    }
}
  stages {
    stage('Terraform Init') {
      steps {
        sh "${env.TERRAFORM_HOME}/terraform init -input=false"
      }
    }
    stage('Terraform Plan') {
      steps {
        sh "${env.TERRAFORM_HOME}/terraform plan -out=tfplan -input=false -var-file='terraform.tfvars'"
      }
    }
    stage('Terraform Apply') {
      steps {
        input 'Apply Plan'
        sh "${env.TERRAFORM_HOME}/terraform apply -input=false tfplan"
      }
    }
  }
}